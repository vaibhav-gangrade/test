@model Millionlights.Models.Coupon
@using PagedList.Mvc;
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    int roleID = 0;
    var userId = Session["UserID"];
    if (Session["RoleID"] != null)
    {
        roleID = int.Parse(Session["RoleID"].ToString());
    }
    if (roleID != 0)
    {
        if (roleID == 1 || roleID == 3)
        {
            Layout = "~/Views/Shared/_AceLandingLayout.cshtml";

            <script src="~/Content/assets/js/jquery.js"></script>
        }
        else
        {
            Layout = "~/Views/Shared/_Layout.cshtml";
        }
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    var partnerList = (List<SelectListItem>)ViewBag.partnerList;
    var CouponStatusList = (List<SelectListItem>)ViewBag.CouponStatusList;
}
@{
    var messages = (Dictionary<string, string>)ViewBag.Messages;
}
<link rel="stylesheet" href="~/Content/assets/css/font-awesome.css" />

<link href="~/Content/learn/css/datepicker.css" rel="stylesheet" />

<link rel="stylesheet" href="~/Content/assets/css/jquery-ui.css" />

<link rel="stylesheet" href="~/Content/assets/css/ui.jqgrid.css" />

<link rel="stylesheet" href="~/Content/assets/css/bootstrap.css" />

<link rel="stylesheet" href="~/Content/assets/css/ace.css" class="ace-main-stylesheet" id="main-ace-style" />
<link href="~/Content/assets/css/daterangepicker.css" rel="stylesheet" />
<script src="~/Content/assets/js/date-time/moment.js"></script>
<script src="~/Content/assets/js/date-time/daterangepicker.js"></script>
<div class="breadcrumbs breadCrumbAlign" id="breadcrumbs">
    <script type="text/javascript">
        try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
    </script>

    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="/Home/Dashboard">Home</a>
        </li>
        <li> <a href="/CouponCode/AllCoupons">Coupons</a></li>
        <li class="active">Search and View Coupons</li>
    </ul>
</div>

<div class="page-header">
    <h1>
        Coupons
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            Search and View Coupons
        </small>
    </h1>
</div>
<div style="">
    <div class="row">
        <div class="col-md-2 col-sm-2">
            <div class="form-group rdbcouponShow">
                <input type="radio" name="assignUser" id="exitUser" class="asignRdb" value="exitUser" onclick="exitUserRdb()" /><label>Registered Users</label>
            </div>
        </div>
        <div class="col-md-2 col-sm-2">
            <div class="form-group rdbcouponShow">
                <input type="radio" name="assignUser" id="tempUser" class="asignRdb" value="tempUser" onclick="tempUserRdb()" /><label>Imported Users</label>
            </div>
        </div>
        <div class="col-md-2 col-sm-2">
            <div class="form-group rdbcouponShow">
                <input type="radio" name="assignUser" id="unAssignUser" class="asignRdb" value="unAssignUser" onclick="unAssignUserRdb()" /><label>UnAssigned Users</label>
    </div>
        </div>
    </div>
    @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger errorMaxCoupon", id = "errorUserType" })
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <div class="form-group courseDDLWidth">
                @Html.DropDownListFor(model => model.CouponStatus, CouponStatusList, new { @style = "width:100%;height:35px;", id = "ddlCouponStatus", @class = "selectCourse", name = "ddlCouponStatus", @multiple = "multiple" })
            </div>
        </div>
        <div class="col-md-3 col-sm-3">
            <div class="form-group">
                @Html.DropDownListFor(Model => Model.PartnerID, partnerList, "---Select Partner---", new { @class = "", @style = "width:100%;height:35px;", id = "ddlPartner" })
            </div>
        </div>
        <div class="col-md-3 col-sm-3">
            <div class="form-group">
                <input type="text" id="CouponTagTxt" class="" style="width:100%!important;" placeholder="Enter Coupon Tag" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <div class="form-group">
                <input class="form-control" type="text" name="date-range-picker" placeholder="Select date range From-To" id="id-date-range-picker-1" />
            </div>
        </div>
        <div class="col-md-3 col-sm-3">
            <div class="form-group">
                <input type="text" id="CityTxt" class="" style="width:100%!important;" placeholder="Enter city name" />
            </div>
        </div>
        <div class="col-md-3 col-sm-3">
            <div class="form-group">
                <input type="text" id="CouponCodeTxt" class="" style="width:100%!important;" placeholder="Enter Coupon Code" />
            </div>
        </div>
        <div class="col-md-3 col-sm-3">
            <div class="form-group">
                <button type="submit" name="FindTxt" id="FindTxt" class="fm-button ui-state-default ui-corner-all fm-button-icon-right ui-reset btn btn-sm btn-purple" onclick="searchCoupons(this)" style="float: right;">
                    <i class="ace-icon fa fa-search nav-search-icon"></i>Search
                </button>
            </div>
            @*<div class="col-md-2 col-sm-2">
                <div class="form-group">
                    <button type="submit" name="FindTxt" id="FindTxt" class="fm-button ui-state-default ui-corner-all fm-button-icon-right ui-reset btn btn-sm btn-purple" onclick="searchCoupons(this)"><i class="ace-icon fa fa-search nav-search-icon"></i>ExportToCSV</button>
                </div>
            </div>*@
        </div>

    </div>

</div>
@using (Html.BeginForm("AllCoupons", null, FormMethod.Post, new { id = "export" }))
{
    @Html.HiddenFor(x => x.Csv)
    @*<button type="submit" title="Export To CSV" class="ui-state-default ui-corner-all fm-button-icon-right ui-reset btn btn-sm btn-pink"><i class="ace-icon fa fa-file-excel-o nav-search-icon"></i>Export</button>*@

<div class="page-content pagecs">
    <div class="row">
        <div class="col-xs-10">
            <!-- PAGE CONTENT BEGINS -->
            <table id="grid-table"></table>
            <div id="grid-pager"></div>
            <script type="text/javascript">
                var $path_base = "..";//in Ace demo this will be used for editurl parameter
            </script>
            <!-- PAGE CONTENT ENDS -->
        </div><!-- /.col -->
    </div>
</div>
}
<script type="text/javascript">
    window.jQuery || document.write("<script type='text/javascript' src='~/Content/assets/js/jquery.js'>" + "<" + "/script>");
</script>
<script src="../Content/assets/js/date-time/bootstrap-datepicker.js"></script>
<script src="../Content/assets/js/jqGrid/jquery.jqGrid.src.js"></script>
<script src="../Content/assets/js/jqGrid/i18n/grid.locale-en.js"></script>
<link href="~/Content/Multiselct/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/Multiselct/courses-multiselect.js"></script>
<script src="~/Scripts/JS/jquery.blockUI.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var userid = '@userId'
        if (userid == '') {
            var url = "/Account/Login";
            window.location.href = url;
        }
        searchEmpty();
        $("#grid-pager_center").hide();
    });
    function exitUserRdb() {
        $("#CityTxt").removeClass('displayNone');
    }
    function tempUserRdb() {
        $("#CityTxt").removeClass('displayNone');
    }
    function unAssignUserRdb() {
        $("#CityTxt").addClass('displayNone');
    }
    $('input[name=date-range-picker]').daterangepicker({
        'applyClass': 'btn-sm btn-success',
        'cancelClass': 'btn-sm btn-default',
        locale: {
            applyLabel: 'Apply',
            cancelLabel: 'Cancel',
        }
    })
    $("#validFromDt").datepicker();
    $("#ValidToDt").datepicker();
    $('[id*=ddlCouponStatus]').multiselect({
        includeSelectAllOption: true,
        nonSelectedText: '---Select Coupon Status---',

    });
    function waitForTime() {
      
        $.blockUI({ message: '<h4><img src="../Images/loading.gif" />Loading Data Please wait....</h4>' });
        return true;
    }
    var grid_data = [];
    function searchCoupons() {
        var isValid = ValidateAllCoupons();
        if (isValid==true){
            waitForTime();
            grid_data = GetCouponDetails();
        }
            var grid_selector = "#grid-table";
            var pager_selector = "#grid-pager";
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })

            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })
            var totalRecords = grid_data.length;

            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 250,
                colNames: ['Enable / Disable', 'Coupon Code', 'Partner Name', 'Allowed Courses', 'Benefit (%)', 'Created On', 'Coupon Validity', 'Coupon Status', 'Assigned to', 'Coupon Tag'],
                colModel: [
                    { name: 'Action', index: 'Action', sortable: false, formatter: displayButtons },
                    { name: 'CouponCode', index: 'CouponCode', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'PartnerName', index: 'PartnerName', editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'AllowedCourses', index: 'AllowedCourses', width: 150, },
                    { name: 'DiscountPrice', index: 'DiscountPrice', width: 100 },
                     { name: 'CreatedOnString', index: 'CreatedOnString', width: 150 },
                    { name: 'CouponValidity', index: 'CouponValidity', width: 250 },
                    //{ name: 'ValidFromString', index: 'ValidFromString', width: 150 },
                    //{ name: 'ValidToString', index: 'ValidToString', width: 150 },
                    { name: 'StatusType', index: 'StatusType', width: 150 },
                    { name: 'AssignedUser', index: 'AssignedUser', width: 150 },
                    { name: 'CouponTag', index: 'CouponTag', width: 150 }
                ],
                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 30, totalRecords],
                pager: pager_selector,
                altRows: true,
                //toppager: true,
                multiselect: true,
                //multikey: "ctrlKey",
                multiboxonly: true,
                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);
                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                    $(".ui-jqgrid-titlebar").find('#btnExport').remove();
                    $(".ui-jqgrid-titlebar").append('<button type="submit" id="btnExport" title="Export To CSV"  class="pull-right ui-state-default ui-corner-all fm-button-icon-right ui-reset btn btn-sm btn-pink exportPartner"><i class="ace-icon fa fa-file-excel-o nav-search-icon"></i>Export</button>');

                },

                editurl: "/dummy.html",//nothing is saved

                caption: "Coupons",
                //,autowidth: true,

                /**
                ,
    
                grouping:true,
    
                groupingView : {
    
                     groupField : ['name'],
    
                     groupDataSorted : true,
    
                     plusicon : 'fa fa-chevron-down bigger-110',
    
                     minusicon : 'fa fa-chevron-up bigger-110'
                },
    
                caption: "Grouping"
    
                */

            })
            .jqGrid('navButtonAdd', 
             '#grid-table',
             {caption:" Export to Excel ", 
                 buttonicon:"ui-icon-bookmark", 
                 onClickButton: genCSV, position:"last"});
            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

            //enable search/filter toolbar

            //jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})

            //jQuery(grid_selector).filterToolbar({});


            //switch element when editing inline

            function aceSwitch(cellvalue, options, cell) {

                setTimeout(function () {

                    $(cell).find('input[type=checkbox]')

                        .addClass('ace ace-switch ace-switch-5')

                        .after('<span class="lbl"></span>');

                }, 0);

            }

            //enable datepicker

            function pickDate(cellvalue, options, cell) {

                setTimeout(function () {

                    $(cell).find('input[type=text]')

                            .datepicker({ format: 'dd-mm-yyyy', autoclose: true });

                }, 0);

            }

            //navButtons

            jQuery(grid_selector).jqGrid('navGrid', pager_selector,

                { //navbar options

                    edit: false,

                    editicon: 'ace-icon fa fa-pencil blue',

                    add: true,

                    addicon: 'ace-icon fa fa-plus-circle purple',

                    del: false,

                    delicon: 'ace-icon fa fa-trash-o red',

                    search: true,

                    searchicon: 'ace-icon fa fa-search orange',

                    refresh: true,

                    refreshicon: 'ace-icon fa fa-refresh green',

                    view: true,

                    viewicon: 'ace-icon fa fa-search-plus grey',
                },

                {
                    //edit record form

                    //closeAfterEdit: true,

                    //width: 700,

                    recreateForm: true,

                    beforeShowForm: function (e) {
                        var form = $(e[0]);

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')

                        //style_edit_form(form);

                    }

                },

                {

                    //new record form

                    //width: 700,

                    beforeShowForm: function (e) {

                        location.href = "/CouponCode/CreateCoupon"

                    }

                },

                {
                    //delete record form

                    // recreateForm: true,

                    beforeShowForm: function (e) {




                    },

                    onClick: function (e) {

                       
                    }

                },

                {

                    //search form

                    recreateForm: true,

                    afterShowSearch: function (e) {

                        var form = $(e[0]);

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')

                        style_search_form(form);

                    },

                    afterRedraw: function () {

                        style_search_filters($(this));

                    }

                    ,

                    multipleSearch: true,

                    /**
    
                    multipleGroup:true,
    
                    showQuery: true
    
                    */

                },

                {
                    //view record form

                    recreateForm: true,

                    beforeShowForm: function (e) {
                        var form = $(e[0]);

                        form.find('ui-jqdialog').addClass('jqwidth');

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')

                    }

                }

            )
            function style_edit_form(form) {

                //enable datepicker on "sdate" field and switches for "stock" field

                form.find('input[name=sdate]').datepicker({ format: 'dd-mm-yyyy', autoclose: true })

                form.find('input[name=stock]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');

                //don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)

                //.addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');


                //update buttons classes

                var buttons = form.next().find('.EditButton .fm-button');

                buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon

                buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');

                buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')




                buttons = form.next().find('.navButton a');

                buttons.find('.ui-icon').hide();

                buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');

                buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');

            }
            function style_delete_form(form) {

                var buttons = form.next().find('.EditButton .fm-button');

                buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon

                buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');

                buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')

            }

            function style_search_filters(form) {

                form.find('.delete-rule').val('X');

                form.find('.add-rule').addClass('btn btn-xs btn-primary');

                form.find('.add-group').addClass('btn btn-xs btn-success');

                form.find('.delete-group').addClass('btn btn-xs btn-danger');

            }

            function style_search_form(form) {

                var dialog = form.closest('.ui-jqdialog');

                var buttons = dialog.find('.EditTable')

                buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');

                buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');

                buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');

            }
            function beforeDeleteCallback(e) {

                var form = $(e[0]);

                if (form.data('styled')) return false;




                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')

                style_delete_form(form);




                form.data('styled', true);

            }



            function beforeEditCallback(e) {

                var form = $(e[0]);

                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')

                style_edit_form(form);

            }
            function displayButtons(cellvalue, options, rowObject) {
                if (rowObject.IsActive == true) {
                    var disable = '<a href="#" title="Disable" onclick="EnableDisable(' + rowObject.Id + ',' + rowObject.IsActive + ')"   class="ace-icon fa  fa-check-square-o fa-lg blue"></a>';
                    return "<div>" + disable + "</div>";
                }
                else {
                    var enable = '<a href="#" title="Enable" onclick="EnableDisable(' + rowObject.Id + ',' + rowObject.IsActive + ')"  class="ace-icon fa fa-square-o fa-lg red"></a>';

                    return "<div>" + enable + "</div>";
                }

            }
            function styleCheckbox(table) {

            }

            //unlike navButtons icons, action icons in rows seem to be hard-coded
            //you can change them like this in here if you want

            function updateActionIcons(table) {
            }
            //replace icons with FontAwesome icons like above

            function updatePagerIcons(table) {

                var replacement =

                {

                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',

                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',

                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',

                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'

                };

                $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {

                    var icon = $(this);

                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));




                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);

                })

            }




            function enableTooltips(table) {

                $('.navtable .ui-pg-button').tooltip({ container: 'body' });

                $(table).find('.ui-pg-div').tooltip({ container: 'body' });

            }

            //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');

            $(document).one('ajaxloadstart.page', function (e) {

                $(grid_selector).jqGrid('GridUnload');

                $('.ui-jqdialog').remove();

            });

        //});
    
    }
    function genCSV() {
        alert('a');
    }
    function GetCouponDetails() {
        var userType = document.querySelector('input[name="assignUser"]:checked').value;

        var partId = $('#ddlPartner').val();
        //    var partID = partId.options[partId.selectedIndex].value;
            var coupState = $('#ddlCouponStatus').val();
        //    var CouponState = coupState.options[coupState.selectedIndex].value;
            var dateRange = $('#id-date-range-picker-1')[0].value;
            var city = $('#CityTxt')[0].value;
            var couponTag = $('#CouponTagTxt')[0].value;
            var couponCode = $('#CouponCodeTxt')[0].value;
        var partnerList = [];
        var grid_selector = "#grid-table";
        $(grid_selector).jqGrid('GridUnload');
        $('.ui-jqdialog').remove();
        $.ajax({

            type: "POST",

            async: false,

            url: "/CouponCode/GetCouponDetails",

            data: "{userType:'" + userType + "',partId:'" + partId + "',coupState:'" + coupState + "',dateRange:'" + dateRange + "',city:'" + city + "',couponTag:'" + couponTag + "',couponCodeStr:'" + couponCode + "'}",

            contentType: 'application/json',

            success: function (response) {
                if (response != null) {
                    for (var i = 0; i < response.length; i++) {
                        partnerList.push(JSON.parse(response[i]))
                    }
                }
                setTimeout(function () {
                    $.unblockUI();
                }, 1);
            },

            error: function (response) {
            }

        });

        return partnerList;

    }

    function EnableDisable(id, status) {
        if (status == true) {
            var messge = '@messages["Disable"]'
            var conf = confirm(messge);

            if (conf === true) {

                $.ajax({

                    type: "POST",

                    async: false,

                    url: "/CouponCode/Disabled",

                    data: "{id:'" + id + "',status:'" + status + "'}",

                    contentType: 'application/json',

                    success: function (response) {

                       // location.reload();

                    },

                    error: function (response) {
                    }
                   
                });
            }

        }

        else {
            var messge = '@messages["Enable"]'

            var conf = confirm(messge);

            if (conf === true) {

                $.ajax({

                    type: "POST",

                    async: false,

                    url: "/CouponCode/Disabled",

                    data: "{id:'" + id + "',status:'" + status + "'}",

                    contentType: 'application/json',

                    success: function (response) {

                      //  location.reload();

                    },

                    error: function (response) {
                    }

                });
            }
        }
        searchCoupons();
    }
  
    function ValidateAllCoupons() {
        var isValid = true;
        var userType = document.querySelector('input[name="assignUser"]:checked');
        if (userType == null) {
            $("#errorUserType")[0].innerHTML = '@messages["SelectAnyField"]'
            isValid = false;
        }
        else {
            $("#errorUserType")[0].innerHTML = "";
        }
        if (isValid == true) {
            return true;
        }
        else {
            return false;
        }
    }

    function searchEmpty() {
        var grid_data = [];
        //jQuery(function ($) {
            var grid_selector = "#grid-table";
            var pager_selector = "#grid-pager";
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })

            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })

            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 250,
                colNames: ['Enable/Disable', 'Coupon Code', 'Partner Name', 'Allowed Courses', 'Benefit (%)', 'Created On', 'Coupon Validity', 'Coupon Status', 'User Name', 'Coupon Tag'],
                colModel: [
                    { name: 'Action', index: 'Action', sortable: false, formatter: displayButtons },
                    { name: 'CouponCode', index: 'CouponCode', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'PartnerName', index: 'PartnerName', editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'AllowedCourses', index: 'AllowedCourses', width: 150, },
                    { name: 'DiscountPrice', index: 'DiscountPrice', width: 100 },
                    { name: 'CreatedOnString', index: 'CreatedOnString', width: 150 },
                    { name: 'CouponValidity', index: 'CouponValidity', width: 250 },
                    //{ name: 'stDateString', index: 'stDateString', width: 150 },
                    //{ name: 'endDateString', index: 'endDateString', width: 150 },
                    { name: 'StatusType', index: 'StatusType', width: 150 },
                    { name: 'AssignedUser', index: 'AssignedUser', width: 150 },
                    { name: 'CouponTag', index: 'CouponTag', width: 150 }
                ],
                viewrecords: false,
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: pager_selector,
                altRows: true,
                //toppager: true,
                multiselect: true,
                //multikey: "ctrlKey",
                multiboxonly: true,
                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);
                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                    $(".ui-jqgrid-titlebar").find('#btnExport').remove();
                    $(".ui-jqgrid-titlebar").append('<button type="submit" id="btnExport" title="Export To CSV"  class="pull-right ui-state-default ui-corner-all fm-button-icon-right ui-reset btn btn-sm btn-pink exportPartner"><i class="ace-icon fa fa-file-excel-o nav-search-icon"></i>Export</button>');

                },

                editurl: "/dummy.html",//nothing is saved

                caption: "Coupons",
                //,autowidth: true,

                /**
                ,
    
                grouping:true,
    
                groupingView : {
    
                     groupField : ['name'],
    
                     groupDataSorted : true,
    
                     plusicon : 'fa fa-chevron-down bigger-110',
    
                     minusicon : 'fa fa-chevron-up bigger-110'
                },
    
                caption: "Grouping"
    
                */

            })
              .jqGrid('navButtonAdd',
             '#grid-table',
             {
                 caption: " Export to Excel ",
                 buttonicon: "ui-icon-bookmark",
                 onClickButton: genCSV, position: "last"
             });

            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

            //enable search/filter toolbar

            //jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})

            //jQuery(grid_selector).filterToolbar({});


            //switch element when editing inline

            function aceSwitch(cellvalue, options, cell) {

                setTimeout(function () {

                    $(cell).find('input[type=checkbox]')

                        .addClass('ace ace-switch ace-switch-5')

                        .after('<span class="lbl"></span>');

                }, 0);

            }

            //enable datepicker

            function pickDate(cellvalue, options, cell) {

                setTimeout(function () {

                    $(cell).find('input[type=text]')

                            .datepicker({ format: 'dd-mm-yyyy', autoclose: true });

                }, 0);

            }

            //navButtons

            jQuery(grid_selector).jqGrid('navGrid', pager_selector,

                { //navbar options

                    edit: false,

                    editicon: 'ace-icon fa fa-pencil blue',

                    add: true,

                    addicon: 'ace-icon fa fa-plus-circle purple',

                    del: false,

                    delicon: 'ace-icon fa fa-trash-o red',

                    search: true,

                    searchicon: 'ace-icon fa fa-search orange',

                    refresh: true,

                    refreshicon: 'ace-icon fa fa-refresh green',

                    view: true,

                    viewicon: 'ace-icon fa fa-search-plus grey',
                },

                {
                    //edit record form

                    //closeAfterEdit: true,

                    //width: 700,

                    recreateForm: true,

                    beforeShowForm: function (e) {
                        var form = $(e[0]);

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')

                        //style_edit_form(form);

                    }

                },

                {

                    //new record form

                    //width: 700,

                    beforeShowForm: function (e) {

                        location.href = "/CouponCode/CreateCoupon"

                    }

                },

                {
                    //delete record form

                    // recreateForm: true,

                    beforeShowForm: function (e) {




                    },

                    onClick: function (e) {

                      
                    }

                },

                {

                    //search form

                    recreateForm: true,

                    afterShowSearch: function (e) {

                        var form = $(e[0]);

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')

                        style_search_form(form);

                    },

                    afterRedraw: function () {

                        style_search_filters($(this));

                    }

                    ,

                    multipleSearch: true,

                    /**
    
                    multipleGroup:true,
    
                    showQuery: true
    
                    */

                },

                {
                    //view record form

                    recreateForm: true,

                    beforeShowForm: function (e) {
                        var form = $(e[0]);

                        form.find('ui-jqdialog').addClass('jqwidth');

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')

                    }

                }

            )
            function style_edit_form(form) {

                //enable datepicker on "sdate" field and switches for "stock" field

                form.find('input[name=sdate]').datepicker({ format: 'dd-mm-yyyy', autoclose: true })




                form.find('input[name=stock]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');

                //don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)

                //.addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');


                //update buttons classes

                var buttons = form.next().find('.EditButton .fm-button');

                buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon

                buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');

                buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')




                buttons = form.next().find('.navButton a');

                buttons.find('.ui-icon').hide();

                buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');

                buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');

            }




            function style_delete_form(form) {

                var buttons = form.next().find('.EditButton .fm-button');

                buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon

                buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');

                buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')

            }

            function style_search_filters(form) {

                form.find('.delete-rule').val('X');

                form.find('.add-rule').addClass('btn btn-xs btn-primary');

                form.find('.add-group').addClass('btn btn-xs btn-success');

                form.find('.delete-group').addClass('btn btn-xs btn-danger');

            }

            function style_search_form(form) {

                var dialog = form.closest('.ui-jqdialog');

                var buttons = dialog.find('.EditTable')

                buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');

                buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');

                buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');

            }
            function beforeDeleteCallback(e) {

                var form = $(e[0]);

                if (form.data('styled')) return false;




                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')

                style_delete_form(form);




                form.data('styled', true);

            }




            function beforeEditCallback(e) {

                var form = $(e[0]);

                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')

                style_edit_form(form);

            }
            function displayButtons(cellvalue, options, rowObject) {
                var disableDiv = '';
                if (rowObject.IsActive == true) {
                    var disable = '<a href="#" title="Disable" onclick="EnableDisable(' + rowObject.Id + ',' + rowObject.IsActive + ')"   class="ace-icon fa  fa-check-square-o fa-lg blue"></a>';

                    disableDiv = disable;

                }

                else {
                    var enable = '<a href="#" title="Enable" onclick="EnableDisable(' + rowObject.Id + ',' + rowObject.IsActive + ')"  class="ace-icon fa fa-square-o fa-lg red"></a>';

                    disableDiv = enable;
                }
                return "<div>" + disableDiv + "</div>";
            }

            //it causes some flicker when reloading or navigating grid

            //it may be possible to have some custom formatter to do this as the grid is being created to prevent this

            //or go back to default browser checkbox styles for the grid

            function styleCheckbox(table) {

                /**
    
                    $(table).find('input:checkbox').addClass('ace')
    
                    .wrap('<label />')
    
                    .after('<span class="lbl align-top" />')
                    $('.ui-jqgrid-labels th[id*="_cb"]:first-child')
    
                    .find('input.cbox[type=checkbox]').addClass('ace')
    
                    .wrap('<label />').after('<span class="lbl align-top" />');
    
                */

            }

            //unlike navButtons icons, action icons in rows seem to be hard-coded

            //you can change them like this in here if you want

            function updateActionIcons(table) {

                /**
    
                var replacement =
    
                {
    
                    'ui-ace-icon fa fa-pencil' : 'ace-icon fa fa-pencil blue',
    
                    'ui-ace-icon fa fa-trash-o' : 'ace-icon fa fa-trash-o red',
    
                    'ui-icon-disk' : 'ace-icon fa fa-check green',
    
                    'ui-icon-cancel' : 'ace-icon fa fa-times red'
    
                };
    
                $(table).find('.ui-pg-div span.ui-icon').each(function(){
    
                    var icon = $(this);
    
                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
    
                    if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
    
                })
    
                */

            }




            //replace icons with FontAwesome icons like above

            function updatePagerIcons(table) {

                var replacement =

                {

                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',

                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',

                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',

                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'

                };

                $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {

                    var icon = $(this);

                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));




                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);

                })

            }

            function enableTooltips(table) {

                $('.navtable .ui-pg-button').tooltip({ container: 'body' });

                $(table).find('.ui-pg-div').tooltip({ container: 'body' });

            }

            //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');
            $(document).one('ajaxloadstart.page', function (e) {

                $(grid_selector).jqGrid('GridUnload');

                $('.ui-jqdialog').remove();

            });

        //});
      
    }


</script>
<script type="text/javascript">
    $('#export').submit(function () {
        debugger
        //var pageNumber = $('#grid-table').getGridParam('lastpage');
        //$("#grid-table").trigger("reloadGrid", [{ page: pageNumber }]);
      
        //var pageNumber =  $('#grid-table').jqGrid('getGridParam', 'data').length;
        //$('#grid-table').jqGrid('getRowData').length = pageNumber;
        //$('#grid-table').setGridParam({ rowNum: pageNumber });
        //$("#grid-table")[0].updatepager(false, true);

        //var totalRows = $('#grid-table').jqGrid('getGridParam', 'data').length;
        //$('#grid-table').jqGrid('getRowData').length = totalRows;

        //$('#grid-table').setGridParam({ rowNum: totalRows });
        //$('#grid-table').jqGrid('getGridParam').data.length = totalRows

        $('#Csv').val($('#grid-table').table2CSV({ header: ['Coupon Code', 'Partner Name', 'Allowed Courses', 'Benefit (%)', 'Created On', 'Coupon Validity', 'Coupon Status', 'Assigned OR Activated By','Coupon Tag'], delivery: 'value' }));
    });
</script>
<script src="~/Scripts/JS/table2CSV.js"></script>
<style>
    .jqwidth {
        width: 1000px !important;
    }
    .pagecs {
        padding: 0px 1px 1px !important;
    }
</style>

