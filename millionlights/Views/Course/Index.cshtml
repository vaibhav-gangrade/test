@model Millionlights.Models.Course

@using PagedList.Mvc;
@{
    ViewBag.Title = "View Course";
    int roleID = 0;
    var userId = Session["UserID"];
    if (Session["RoleID"] != null)
    {
        roleID = int.Parse(Session["RoleID"].ToString());
    }
    if (roleID != 0)
    {
        if (roleID == 1 || roleID == 3)
        {
            Layout = "~/Views/Shared/_AceLandingLayout.cshtml";
            <script src="~/Content/assets/js/jquery.js"></script>
        }
        else
        {
            Layout = "~/Views/Shared/_Layout.cshtml";
        }
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    var userName = Session["Customer"];
}
@{
    var messages = (Dictionary<string, string>)ViewBag.Messages;
}
<link rel="stylesheet" href="~/Content/assets/css/font-awesome.css" />
<link rel="stylesheet" href="~/Content/assets/css/jquery-ui.css" />
<link rel="stylesheet" href="~/Content/assets/css/ui.jqgrid.css" />
<link rel="stylesheet" href="~/Content/assets/css/bootstrap.css" />
<link rel="stylesheet" href="~/Content/assets/css/ace.css" class="ace-main-stylesheet" id="main-ace-style" />

<script type="text/javascript">
    window.jQuery || document.write("<script type='text/javascript' src='~/Content/assets/js/jquery.js'>" + "<" + "/script>");
</script>
<script src="~/Content/assets/js/date-time/bootstrap-datepicker.js"></script>
<script src="~/Content/assets/js/jqGrid/jquery.jqGrid.src.js"></script>
<script src="~/Content/assets/js/jqGrid/i18n/grid.locale-en.js"></script>


<div id="main-container">
    <div class="breadcrumbs breadCrumbAlign breadCrumbWd" id="breadcrumbs">
        <script type="text/javascript">
            try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
        </script>

        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-home home-icon"></i>
                <a href="/Home/Dashboard">Home</a>
            </li>
            <li> <a href="/Course/Index">Course</a></li>
            <li class="active">View</li>
        </ul>
    </div>
    <section class="main-content">
        <div>
    <div class="row">
                <div class="col-md-12">
                    <div class=" box_style_2">
        <div class="page-header">
            <h1>
                Courses
                <small>
                    <i class="ace-icon fa fa-angle-double-right"></i>
                    View Course(s)
                </small>
            </h1>
        </div>
                        @using (Html.BeginForm("Index", null, FormMethod.Post, new { id = "export" }))
                        {
                            @Html.HiddenFor(m => m.Csv)
                            <div class="page-content pagecs">
                                <div class="row">
        <div class="col-xs-10">
            <!-- PAGE CONTENT BEGINS -->
            <table id="grid-table"></table>

            <div id="grid-pager"></div>

            <script type="text/javascript">
                var $path_base = "..";//in Ace demo this will be used for editurl parameter
            </script>

            <!-- PAGE CONTENT ENDS -->
        </div><!-- /.col -->
    </div>
</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<script type="text/javascript">
    
    $(document).ready(function () {
    var ud = '@userId'
        DisplayCourses();
    });
  
    function DisplayCourses() {
        var grid_data = [];
        grid_data = GetCourseDetails();
        jQuery(function ($) {
            var grid_selector = "#grid-table";
            var pager_selector = "#grid-pager";
        $(grid_selector).jqGrid('GridUnload');
        $('.ui-jqdialog').remove();
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })
            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })
            var totalRecords = grid_data.length;

            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 250,
                //colNames: ['Action', 'Id', 'CourseName', 'StartDate', 'EndDate', 'BasePrice', 'Duration', 'NoOfSessions', 'CourseCode', 'EnableForCertification', 'DisplayOnHomePage'],
                colNames: ['Action', 'Id', 'Course Name', 'Base Price', 'Duration', 'No Of Sessions', 'Course Code', 'Enable For Certification', 'Display On HomePage'],
                colModel: [
                    { name: 'Action', index: 'Action', sortable: false, formatter: displayButtons },
                    { name: 'Id', index: 'Id', width: 60, sorttype: "int", hidden: true },
                    { name: 'CourseName', index: 'CourseName', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    //{ name: 'stDateString', index: 'stDateString', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    //{ name: 'endDateString', index: 'endDateString', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'BasePrice', index: 'BasePrice', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'Duration', index: 'Duration', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'NoOfSessions', index: 'NoOfSessions', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'CourseCode', index: 'CourseCode', width: 150, editable: true, editoptions: { size: "20", maxlength: "30" } },
                    { name: 'EnableForCertification', index: 'EnableForCertification', width: 200, editable: true, edittype: "checkbox", editoptions: { value: "Yes:No" }, unformat: aceSwitch },
                    { name: 'DisplayOnHomePage', index: 'DisplayOnHomePage', editable: true, edittype: "checkbox", editoptions: { value: "Yes:No" }, unformat: aceSwitch}

                ],

                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 30, totalRecords],
                pager: pager_selector,
                altRows: true,
                //toppager: true,

                multiselect: true,
                //multikey: "ctrlKey",
                multiboxonly: true,

                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);

                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                    $(".ui-jqgrid-titlebar").find('#btnExport').remove();
                    $(".ui-jqgrid-titlebar").append('<button type="submit" id="btnExport" title="Export To CSV"  class="pull-right ui-state-default ui-corner-all fm-button-icon-right ui-reset btn btn-sm btn-pink exportPartner"><i class="ace-icon fa fa-file-excel-o nav-search-icon"></i>Export</button>');
                },
                editurl: "/dummy.html",//nothing is saved
                caption: "Course Details"

                //,autowidth: true,


                /**
                ,
                grouping:true,
                groupingView : {
                     groupField : ['name'],
                     groupDataSorted : true,
                     plusicon : 'fa fa-chevron-down bigger-110',
                     minusicon : 'fa fa-chevron-up bigger-110'
                },
                caption: "Grouping"
                */

            });
            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

            //enable search/filter toolbar
            //jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})
            //jQuery(grid_selector).filterToolbar({});


            //switch element when editing inline
            function aceSwitch(cellvalue, options, cell) {
                setTimeout(function () {
                    $(cell).find('input[type=checkbox]')
                        .addClass('ace ace-switch ace-switch-5')
                        .after('<span class="lbl"></span>');
                }, 0);
            }
            //enable datepicker
            function pickDate(cellvalue, options, cell) {
                setTimeout(function () {
                    $(cell).find('input[type=text]')
                            .datepicker({ format: 'dd-mm-yyyy', autoclose: true });
                }, 0);
            }


            //navButtons
            jQuery(grid_selector).jqGrid('navGrid', pager_selector,
                { 	//navbar options
                    edit: false,
                    editicon: 'ace-icon fa fa-pencil blue',
                    add: true,
                    addicon: 'ace-icon fa fa-plus-circle purple',
                    del: true,
                    delicon: 'ace-icon fa fa-trash-o red',
                    search: true,
                    searchicon: 'ace-icon fa fa-search orange',
                    refresh: true,
                    refreshicon: 'ace-icon fa fa-refresh green',
                    view: true,
                    viewicon: 'ace-icon fa fa-search-plus grey',
                },
                {
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    }
                },
                {
                    beforeShowForm: function (e) {
                        location.href = "/Course/CreateCourse"
                    }
                },
                {
                    beforeShowForm: function (e) {
                        ReadTablesRows();

                    },
                    onClick: function (e) {
                       
                    }
                },
                {
                    //search form
                    recreateForm: true,
                    afterShowSearch: function (e) {
                        var form = $(e[0]);
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                        style_search_form(form);
                    },
                    afterRedraw: function () {
                        style_search_filters($(this));
                    }
                    ,
                    multipleSearch: true,
                },
                {
                    //view record form
                    recreateForm: true,
                    beforeShowForm: function (e) {
                        var form = $(e[0]);
                    form.find('ui-jqdialog').addClass('jqwidth');
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    }
                }
            )

            function style_edit_form(form) {
                form.find('input[name=sdate]').datepicker({ format: 'dd-mm-yyyy', autoclose: true })

                form.find('input[name=stock]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');
                //update buttons classes
                var buttons = form.next().find('.EditButton .fm-button');
                buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon
                buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');
                buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')

                buttons = form.next().find('.navButton a');
                buttons.find('.ui-icon').hide();
                buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');
                buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');
            }

            function style_delete_form(form) {
                var buttons = form.next().find('.EditButton .fm-button');
                buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon
                buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');
                buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')
            }

            function style_search_filters(form) {
                form.find('.delete-rule').val('X');
                form.find('.add-rule').addClass('btn btn-xs btn-primary');
                form.find('.add-group').addClass('btn btn-xs btn-success');
                form.find('.delete-group').addClass('btn btn-xs btn-danger');
            }
            function style_search_form(form) {
                var dialog = form.closest('.ui-jqdialog');
                var buttons = dialog.find('.EditTable')
                buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');
                buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');
                buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');
            }

            function beforeDeleteCallback(e) {
                var form = $(e[0]);
                if (form.data('styled')) return false;

                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                style_delete_form(form);

                form.data('styled', true);
            }

            function beforeEditCallback(e) {
                var form = $(e[0]);
                form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                style_edit_form(form);
            }

            function displayButtons(cellvalue, options, rowObject) {
                var disableDiv = '';
                var edit = '<a href="#" title="Edit Course" id="edit_' + rowObject.Id + '" onclick="EditCourse(' + rowObject.Id + ')" class="ace-icon fa fa-pencil fa-lg blue"></a>';
                if (rowObject.IsActive == true) {

                var disable = '&nbsp;&nbsp;&nbsp;<a href="#" title="Disable" onclick="EnableDisable(' + rowObject.Id + ',' + rowObject.IsActive + ')"   class="ace-icon fa  fa-check-square-o fa-lg blue"></a>';

                    disableDiv = disable;

                }

                else {

                var enable = '&nbsp;&nbsp;&nbsp;<a href="#" title="Enable" onclick="EnableDisable(' + rowObject.Id + ',' + rowObject.IsActive + ')"  class="ace-icon fa fa-square-o fa-lg red"></a>';

                    disableDiv = enable;
                }
                return "<div style='display:flex;'>" + edit + disableDiv + "</div>";
            }
            function styleCheckbox(table) {
            }
            function updateActionIcons(table) {
            }

            //replace icons with FontAwesome icons like above
            function updatePagerIcons(table) {
                var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
                $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                    var icon = $(this);
                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
                })
            }

            function enableTooltips(table) {
                $('.navtable .ui-pg-button').tooltip({ container: 'body' });
                $(table).find('.ui-pg-div').tooltip({ container: 'body' });
            }

            $(document).one('ajaxloadstart.page', function (e) {
                $(grid_selector).jqGrid('GridUnload');
                $('.ui-jqdialog').remove();
            });
        });
    }

    function EditCourse(id) {
                var url = '@Url.Action("EditCourse", "Course", new { id = -1 })';
                window.location.href = url.replace('-1', id);
            }
            function GetCourseDetails() {
                var courseList = [];
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "/Course/GetCourseDetails",
                    data: {},
                    contentType: 'application/json',
                    success: function (response) {
                        if (response != null) {
                            for (var i = 0; i < response.length; i++) {
                                courseList.push(JSON.parse(response[i]))
                            }
                        }
                    },
                    error: function (response) {
                    }
                });
                return courseList;
            }

            function DeleteCourse(id) {
        var deleteRecord = '@messages["DeleteRecord"]'
                var conf = confirm(deleteRecord);
                if (conf === true) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        url: "/Course/Disabled",
                        data: "{id:" + id + ",status:'" + true + "'}",
                        contentType: 'application/json',
                        success: function (response) {
                    DisplayCourses();
                        },
                        error: function (response) {
                        }
                    });
                }
            }
            function EnableDisable(id, status) {

                if (status == true) {
            var disable = '@messages["Disable"]'
                    var conf = confirm(disable);

                    if (conf === true) {

                        $.ajax({

                            type: "POST",

                            async: false,

                            url: "/Course/Disabled",

                            data: "{id:'" + id + "',status:'" + status + "'}",

                            contentType: 'application/json',

                            success: function (response) {

                        //location.reload();
                        DisplayCourses();

                            },

                            error: function (response) {
                            }

                        });
                    }

                }

                else {
            var enable = '@messages["Enable"]'
                    var conf = confirm(enable);

                    if (conf === true) {

                        $.ajax({

                            type: "POST",

                            async: false,

                            url: "/Course/Disabled",

                            data: "{id:'" + id + "',status:'" + status + "'}",

                            contentType: 'application/json',

                            success: function (response) {

                        //location.reload();
                        DisplayCourses();

                            },

                            error: function (response) {
                            }

                        });
                    }
                }
            }
            function ReadTablesRows() {
                var model = "[";
                $('#grid-table > tbody  > tr').each(function () {

                    if ($(this).attr('aria-selected') != undefined) {
                        var selectedId = $($(this)[0].cells['1']).find('.fa-pencil')[0].id;
                        var SearchCourseModel =
                        {
                            "Id": selectedId.split('_')[1],
                        };
                        model = model + JSON.stringify(SearchCourseModel) + ",";
                    }
                });

                model = model.substring(0, model.length - 1);
                //model = model + "]";
                if (model == "") {
                    model = "[]";
                }
                else {
                    model = model + "]";
                }
                DeleteMultipleCourse(model);
        //location.reload();
        DisplayCourses();
            }

            function DeleteMultipleCourse(model) {
        var deleteSelectRecord = '@messages["DeleteSelectRecord"]'
                var conf = confirm(deleteSelectRecord);
                if (conf === true) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        data: model,
                        contentType: 'application/json; charset=utf-8',
                        url: "/Course/DeleteMultipleCourse",
                        success: function (response) {

                        },
                        error: function (response) {

                        }
                    });
                }
            }
</script>

<script type="text/javascript">
    $('#export').submit(function () {
        $('#Csv').val($('#grid-table').table2CSV({ header: ['Course Name', 'Base Price (Rs.)', 'Duration', 'No. Of Sessions', 'Course Code', 'Enable For Certification', 'Display On Home Page'], delivery: 'value' }));
    });
</script>
<script src="~/Scripts/JS/table2CSV.js"></script>
<style>
    .pagecs {
        padding: 0px 1px 1px !important;
    }
</style>

