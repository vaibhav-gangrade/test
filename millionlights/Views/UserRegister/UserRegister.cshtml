@model Millionlights.Models.UserRegister
@{
    ViewBag.Title = "UserRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var user = ViewBag.UserDetails;
    var termsCond = ViewBag.TermsAndCondition;
    var userId = Session["UserID"];
}
<script src="~/Scripts/JS/UserRegister.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<style type="text/css">
    .tooltip {
        display: inline;
        position: relative;
    }

        .tooltip:hover:after {
            background: #333;
            background: rgba(0,0,0,.8);
            border-radius: 5px;
            bottom: 26px;
            color: #fff;
            content: attr(title);
            left: 20%;
            padding: 5px 15px;
            position: absolute;
            z-index: 98;
            width: 220px;
        }

        .tooltip:hover:before {
            border: solid;
            border-color: #333 transparent;
            border-width: 6px 6px 0 6px;
            bottom: 20px;
            content: "";
            left: 50%;
            position: absolute;
            z-index: 99;
        }
</style>
@*@using (Html.BeginForm())
    {*@
<section id="login_bg">
    <div class="container">
        <div class="row" style="margin:20px;">
            <div class="col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3 loginLogo">
                <div id="login">
                    <div class="widget-title">
                        <h4>Login</h4>
                    </div>
                    @Html.Partial("~/Views/Account/_ExternalLoginsListPartial.cshtml")
                    @using (Html.BeginForm())
                    {
                        <form action="/Account/ExternalLogin" method="post" onsubmit="return RegisterDialog()">
                            <div class="form-group marginloginpwdTxt">
                                @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control ", id = "UEmail", @placeholder = "Email", onkeypress = "return Validate(event)" })
                                @Html.ValidationMessageFor(m => m.EmailId, "", new { @class = "text-danger errorCheckEmailId" })
                                <span class="input-icon"><i class=" fa-fa-user"></i></span>
                            </div>
                            <div class="form-group marginloginpwdTxt">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control ", id = "Upassword", @placeholder = "Password", onkeypress = "return Validate(event)" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger errorCheckPwd" })
                            </div>
                            <div class="form-group marginloginpwdTxt">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control ", id = "password2", @placeholder = "Confirm Password", onkeypress = "return Validate(event)" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger errorCheckConfrmPwd" })
                            </div>
                            <div id="pass-info" class="clearfix"></div>
                            <label id="lblPwdError" class="colorRed"></label>
                            <input type="button" value="Create an account" id="Regbtn" class="button_fullwidth btn btn-block btn-primary" onclick="RegisterDialog()" />
                            <a href="#" class="button_fullwidth-2 btn btn-block btn-primary"  onclick="LoginBtnCLick();" onkeypress="LoginEnterClick();">Login</a>
                            <hr>

                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</section><!-- End register -->
@*}*@

<div id="RegisterModel" class="modal fade">
    <div class="modal-dialog">
        <div class="">
            <div class="container">
                <div class="row">
                    <div class="">
                        <div id="login" class="col-sm-7" >
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <p class="text-center">
                                <a href="/Home/Index">
                                    <img src="~/coursat/images/edulogo.jpg" />
                                </a>
                            </p>
                            <hr>
                            <h4>Create a new account.</h4>
                            <div class="row">
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control ", id = "firstnameTxt", @placeholder = "First Name" })
                                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger errorFirstname" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control userregtxt", id = "lastnameTxt", @placeholder = "Last Name" })
                                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger errorlastname" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control userregtxt", id = "emailIdTxt", @placeholder = "Email ID", @readonly = "readonly", @style = "background-color: white;" })
                                        @Html.ValidationMessageFor(m => m.EmailId, "", new { @class = "text-danger errorEmailId" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control userregtxt", id = "useranameTxt", @placeholder = "User Name" })
                                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger errorusername" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control userregtxt", id = "passwordTxt", @placeholder = "Password" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger errorpassword" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control userregtxt", id = "confirmpassTxt", @placeholder = "Confirm Password" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger errorconfirm" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.AddressLine1, new { @class = "form-control userregtxt", id = "addressTxt", @placeholder = "Address Line1" })
                                        @*@Html.ValidationMessageFor(m => m.AddressLine1, "", new { @class = "text-danger erroraddress" })*@
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.AddressLine2, new { @class = "form-control userregtxt", id = "addressTxt2", @placeholder = "Address Line 2" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.City, new { @class = "form-control userregtxt", id = "cityTxt", @placeholder = "City" })
                                        @*@Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger errorcity" })*@
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control userregtxt", id = "zipcodeTxt", @placeholder = "Zip Code" })
                                        @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger errorzip" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 col-sm-6">
                                    <div class="regformPadding">
                                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control userregtxt", id = "phoneTxt", @placeholder = "Phone Number", @type = "number" })
                                        <label class="text-danger errorphone" style="font-weight:100;"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 col-sm-12">
                                    <div class="regformPadding">
                                        <input type="checkbox" style="float:left;margin-left:18px;" id="termCondCheck" />
                                        <div style="margin-left:35px !important;">
                                            @*@Html.Raw(HttpUtility.HtmlDecode(termsCond.TermsAndCondition))*@
                                            I agree to the <a href="/Home/HonorCode" target="_blank">terms and conditions</a> and the honour code.

                                        </div>
                                        <label class="text-danger errorTerm" style="font-weight: 100; margin-left: 18px;"></label>
                                    </div>
                                </div>

                            </div>

                            @*<div>
                                @Html.TextBoxFor(m => m.UserType, new { visible = "false", @class = "displayNone" })
                                @Html.TextBoxFor(m => m.ProviderKey, new { visible = "false", @class = "displayNone" })
                            </div>*@
                            <div class="form-group formGroupCustom">
                                <div class="col-md-4 col-md-offset-4 btmMarTop" style="margin-bottom:17px;">
                                    <input type="submit" id="reg" class="btn btn-block btn-primary" value="REGISTER" onclick="RegisterUser();"  />
                                </div>
                            </div>
                            @*}*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div><!-- /.modal -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/jquery.cookie/1.3.1/jquery.cookie.js"></script>

<script type="text/javascript">
        $(document).ready(function () {
        if ((localStorage.CouponCode != "null") && (localStorage.CouponCode != "") && (localStorage.CouponCode != "undefined") && (localStorage.CouponCode != undefined)) {
            $('#actCoupontxt')[0].value = localStorage.CouponCode.trim();
            $('body').addClass("signUpBgColor");
            $('#Regbtn').click(function (e) {
                if (ValidateReg() == false) {
                    e.preventDefault();
                }
            });
        }
    });

    function setCookie(cookieName, cookieValue, nDays) {

        var today = new Date();
        var expire = new Date();
        if (nDays == null || nDays == 0) {
            nDays = 1;
        }
        expire.setTime(today.getTime() + 3600000 * 24 * nDays);
        document.cookie = cookieName + "=" + escape(cookieValue)
        + ";expires=" + expire.toGMTString() + "; path=/";
    }
    function RegisterUser() {
        var data = null;
        if (ValidateUserRegister()) {
            if (window.localStorage[cartName] != null || window.localStorage[cartName] != undefined) {
                currentCourses = JSON.parse(window.localStorage[cartName]);
            }

            if ($.cookie("CourseID") != null) {
                data = $.cookie("CourseID");
                $.removeCookie("CourseID");
            }
            //var mob = /^[1-9]{1}[0-9]{9}$/;
            //if (mob.test($.trim($('#phoneTxt').val())) == false) {
            //    alert("Please enter valid mobile number.");
            //    return false;
            //}
            var FirstName = $("#firstnameTxt").val();
            var LastName = $("#lastnameTxt").val();
            var EmailId = $("#emailIdTxt").val();
            var UserName = $("#useranameTxt").val();
            var Password = $("#passwordTxt").val();
            var ConfirmPassword = $("#confirmpassTxt").val();
            var AddressLine1 = $("#addressTxt").val();
            var AddressLine2 = $("#addressTxt2").val();
            var City = $("#cityTxt").val();
            var ZipCode = $("#zipcodeTxt").val();
            var PhoneNumber = $("#phoneTxt").val();
            $('#reg').prop('disabled', false);

            var userRegister =
            {
                "FirstName": FirstName,
                "LastName": LastName,
                "EmailId": EmailId,
                "UserName": UserName,
                "Password": Password,
                "ConfirmPassword": ConfirmPassword,
                "AddressLine1": AddressLine1,
                "AddressLine2": AddressLine2,
                "City": City,
                "ZipCode": ZipCode,
                "PhoneNumber": PhoneNumber,
                "data": data
            };
            var model = JSON.stringify(userRegister);
            $('#reg').prop('disabled', true);

            $.ajax({
                type: "POST",
                async: false,
                contentType: "application/json; charset=utf-8",
                data: model,
                success: function (response) {

                    if (response == "true") {
                        location.href = "/Account/Manage";
                    }
                    else {

                        var resp = JSON.parse(response);
                        //if (localStorage.CouponCode != null) {
                        if ((localStorage.CouponCode != "null") && (localStorage.CouponCode != "") && (localStorage.CouponCode != "undefined") && (localStorage.CouponCode != undefined))
                            if (localStorage.CouponCode.length == 8) { // For Referral code done by Archana 28.11.2016
                                                              
                                localStorage.value = "MyProfile";
                                var userid = resp.userId;
                                window.location.href = "/UserRegister/Profile/" + userid;
                            }
                            else {  // For Coupon Code
                                $.ajax({
                                    type: "POST",
                                    async: false,
                                    data: JSON.stringify({ "vcc": localStorage.CouponCode, "userId": resp.userId, "isExt": "false" }),
                                    contentType: 'application/json; charset=utf-8',
                                    url: "/CouponCode/ActivateCouponCode",
                                    success: function (response) {
                                        location.href = "/CouponCode/ActivateCoupon";
                                        localStorage.clear();
                                        localStorage.CouponCode = null;
                                    },
                                    error: function (response) {
                                        localStorage.clear();
                                    }
                                });
                            }
                        else if (resp.enrollCourse == "true") {

                            var courseId = resp.couresId;
                            var remCourses = removeItem(currentCourses, courseId);
                            window.localStorage[cartName] = JSON.stringify(remCourses);
                            bootbox.dialog({
                                message: "You have already enrolled this course.",
                                buttons: {
                                    "success": {
                                        "label": "Ok",
                                        "className": "btn-sm btn-primary",
                                        callback: function () {
                                            location.href = '/Home/Index';
                                        }
                                    },
                                    "fail": {
                                        "label": "Cancel",
                                        "className": "btn-sm btn-primary",
                                        callback: function () {
                                            //ML Changes
                                            //location.href = '/Home/UserDashboard';
                                            location.href = '/Course/AllCourses';
                                        }

                                    },

                                }
                            });
                        }
                        else if (currentCourses.length > 0) {
                            for (var i = 0; i < currentCourses.length; i++) {
                                if (currentCourses[i].CourseUserId == resp.userId) {
                                    cartCount = cartCount + 1;
                                    if (cartCount == "Nan") {
                                        cartCount = 0;
                                    }
                                    if ($('#cartItemCount')[0] != undefined) {
                                        $('#cartItemCount')[0].innerHTML = "My Cart (" + cartCount + ")";
                                    }
                                    var courseIdTD = "<td style='vertical-align:middle;'><a href='' class='icon-minus-circled' id='" + currentCourses[i].CourseId + "'></a></td>";
                                    var courseImageTD = "<td class='courseVal'><img src='" + currentCourses[i].CourseImage + "' class='imgOrderDetails' alt=''></td>";
                                    var titleDescriptionTD = "<td class='courseVal'><label>" + currentCourses[i].CourseName + "</label> <br />" + currentCourses[i].CourseDescription + "</td>";
                                    var basePriceTD = "<td class='prceValueTD'><label id='lblPrice'>" + currentCourses[i].CoursePrice + "</label></td>";
                                    var courseDetailsRowTD = "<tr>" + courseIdTD + courseImageTD + titleDescriptionTD + basePriceTD + "</tr>";
                                    $("#orderTable tbody").append(courseDetailsRowTD)
                                }
                            }
                            location.href = "/Order/Details";

                        }
                        else {
                            //window.location.href = "/UserRegister/Profile/" + resp.userId
                            //location.href = "/Home/UserDashboard";
                            //ML Changes
                            //url = '@Url.Action("UserDashboard","Home")';
                            @*url = '@Url.Action("AllCourses", "Course")';*@
                            url = '@Url.Action("AllCourses", "Course")';
                            window.location.href = url;
                        }

                    }
                },
                error: function (data) {

                }

            });
        }
    }


    function Validate(e) {
        
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) { //Enter keycode
            if (ValidateReg()) {
                $("#RegisterModel").show();
                return false;
            }
            else {
                return false;
            }
        }
    }

    function ValidateReg() {
        var emailid = $('#UEmail')[0].value;
        var pwd = $('#Upassword')[0].value;
        var confrmpwd = $('#password2')[0].value;
        var isValid = true;
        @*var ViewUserJson = '@Html.Raw(Json.Encode(user))';
        var viewUser = JSON.parse(ViewUserJson);*@
        if (emailid.length == 0) {
            $('.errorCheckEmailId')[0].innerHTML = "Please Enter Email Id";
            isValid = false;
        }
        else if (isEmail(emailid) == false) {
            $('.errorCheckEmailId')[0].innerHTML = "Please enter valid Email Id";
            isValid = false;
        }
        else if (emailid.length > 0) {

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "emailid": emailid, "phone": null }),
                contentType: 'application/json; charset=utf-8',
                url: "/UserRegister/CheckEmailNPhoneExist",
                success: function (response) {
                    var resp = JSON.parse(response);
                    if (resp.EmailExist == true) {
                        $('.errorCheckEmailId')[0].innerHTML = "Email Id already Exists.";
                        isValid = false;
                    }
                    else {
                        $('.errorCheckEmailId')[0].innerHTML = "";
                    }
                },
                error: function (response) { }
            });
        }

        if (pwd.length == 0) {
            $('.errorCheckPwd')[0].innerHTML = "Please Enter Password";
            isValid = false;
        }
        if (pwd.length < 8) {
            $('.errorCheckPwd')[0].innerHTML = "Minimum password length is 8 char/digits.";
            isValid = false;
        }
        else {
            $('.errorCheckPwd')[0].innerHTML = "";
        }
        if (confrmpwd.length == 0) {
            $('.errorCheckConfrmPwd')[0].innerHTML = "Please Enter Confirm Password";
            isValid = false;
        }
        else if (pwd != confrmpwd) {
            $('.errorCheckPwd')[0].innerHTML = "Password & Confirm Password must be same";
            isValid = false;
        }
        else {
            $('.errorCheckConfrmPwd')[0].innerHTML = "";
        }

        if (isValid == true && pwd == confrmpwd) {
            
            $('#emailIdTxt')[0].value = $('#UEmail')[0].value;
            $('#passwordTxt')[0].value = $('#Upassword')[0].value;
            $('#confirmpassTxt')[0].value = $('#password2')[0].value;

            //if (localStorage.CouponCode == "undefined" || localStorage.CouponCode == undefined ||
            //    localStorage.CouponCode == "null" || localStorage.CouponCode == null) {
            //    $('#ReferralCode')[0].val
            ue = "";
            //    localStorage.CouponCode = "";
            //}
            //else {
            //    $('#ReferralCode')[0].value = localStorage.CouponCode.trim();
            //}

            $('#RegisterModel').modal('show');
        }
        else {
            isValid = false;
        }
        return isValid;
    }


    function isEmail(emailid) {
        var emailRegex = "^[-!#$%&'*+/0-9=?A-Z^_a-z{|}~](\.?[-!#$%&'*+/0-9=?A-Z^_a-z{|}~])*@@[a-zA-Z](-?[a-zA-Z0-9])*(\.[a-zA-Z](-?[a-zA-Z0-9])*)+$";
        if (!emailid.match(emailRegex)) {
            return false;
        }
        else {
            return true;
        }
    }

    function LoginBtnCLick() {
        window.location = "/Account/Login";

    }

    function LoginEnterClick() {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) { //Enter keycode
            LoginBtnCLick();
        }
    }

    function RegisterDialog() {
        if (ValidateReg()) {
            $("#RegisterModel").show();
            return false;
        }
        var cartName = "CourseDetails";
        //localStorage.clear();
        window.localStorage.removeItem(cartName);
        return false;
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

